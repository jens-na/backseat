#!/usr/bin/env ruby

begin
  require 'backseat'
  require 'getoptlong'
rescue LoadError
  require 'rubygems'
  require 'backseat'
end

module Backseat

  flag_verbose = true
  flag_list_candidates = true

  cfgroot = "/etc/backseat/"

  opts = GetoptLong.new(
    ['--help', '-h', GetoptLong::NO_ARGUMENT],
    ['--verbose', '-v', GetoptLong::NO_ARGUMENT],
    ['--cfgroot', '-c', GetoptLong::REQUIRED_ARGUMENT],
    ['--add-candidate', '-n', GetoptLong::REQUIRED_ARGUMENT],
    ['--remove-candidate', '-d', GetoptLong::REQUIRED_ARGUMENT],
    ['--list-candidates', '-l', GetoptLong::NO_ARGUMENT],
    ['--list-backups', '-b', GetoptLong::REQUIRED_ARGUMENT]
  )

  opts.each do |opt,arg|
    case opt
      when '--help'
        puts <<-EOF
Usage: backseat [OPTIONS]
An observer for network based backups.


Report bugs to: Jens Nazarenus <jens@0x6a.de>
backseat home page: <http://github.com/jens-na/backseat/>
        EOF
      when '--verbose'
        flag_verbose = true
      when '--cfgroot'
        cfg_root = arg
      when '--add-candidate'
      when '--remove-candidate'
      when '--list-candidates'
        flag_list_candidates = true
      when '--list-backups'
    end
  end

  # list candidates
  if flag_list_candidates
    obj = Candidates.new(cfgroot)

    obj.get_candidates.each do |candidate|
      puts candidate.name + ' => ' + candidate.root
    end
  end
end
